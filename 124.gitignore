
#include<stdio.h>
#include<string.h>
int num(char* s);//将汉字转为数字
int change(char* s);//将单个汉字转换为数字
char *extract(char* a, char* b);//提取“十”字前后的数字
char chinese[11][3] = { "零","一","二","三","四","五","六","七","八","九","十" };
int main()
{
    char s[10];
    char sp[10];
    int i,caibu;
    scanf("%s", s);
    if (strcmp(s, "整数") == 0)
    {
        scanf("%s", s);
        strcpy(sp, s);
        for (i = 0; i < 2; i++)
            scanf("%s", s);
        caibu = num(s);
        scanf("%s", s);
        while (strcmp(s, sp) == 0)
        {
            scanf("%s", s);
            if (strcmp(s, "增加") == 0)
            {
                scanf("%s", s);
                caibu += num(s);
            }
            else if (strcmp(s, "减少") == 0)
            {
                scanf("%s", s);
                caibu -= num(s);
            }
            scanf("%s", s);
        }
        scanf("%s", s);
        if (caibu <= 10)
            printf("%s", chinese[caibu]);
        else if (caibu > 10 && caibu < 20)
            printf("十%s", chinese[caibu - 10]);
        else if (caibu % 10 == 0)
            printf("%s十", chinese[caibu / 10]);
        else
            printf("%s十%s", chinese[caibu / 10], chinese[caibu % 10]);
    }
    else
        printf("error");
    return 0;
}
int num(char* s)
{
    int i,j;
    int n;
    char buffer[5] = "";
    if (strlen(s) == 2)//处理0-9的汉字
    {
        j=change(s);
    }
    else if (strlen(s) == 4)//处理10-19以及十的倍数的汉字
    {
        strcpy(buffer,extract(buffer, s));
        if (strcmp(buffer, "十") == 0)//处理10-19的汉字
        {
            j = 10 + change(extract(buffer,s+2));
        }
        else//处理十的倍数
        {
            j = change(buffer) * 10;
        }
    }
    else//处理几十几的汉字
    {
        j = change(extract(buffer, s)) * 10 + change(extract(buffer, s + 4));
    }
    return j;
}
int change(char* s)
{
    int i;
    for (i = 0; i < 11; i++)
    {
        if (strcmp(s, chinese[i]) == 0)
            return i;
    }
}
char *extract(char* a, char* b)
{
    a[0] = b[0];
    a[1] = b[1];
    return a;
    
    
    
    
    
    ＃包括< stdio.h中>
＃包括< string.h中>

char chinese1 [ 100 ] [ 100 ] = { “零”，“一”，“二”，“三”，“四”，“五”，“六”，“七”，“八”，“九”，“十” };
int  q1（char a []）{
    诠释 I;
    for（i = 0 ; i < 11 ; i ++）{ if（strcmp（chinese1 [i]，a）== 0）     返回 i;  
    }
    返回 0 ;
}
char chinese2 [ 100 ] [ 100 ] = { “零”，“一”，“二”，“三”，“四”，“五”，“六”，“七”，“八”，“九”，“十” };
int  q2（char a []）{
    诠释 I;
    for（i = 0 ; i < 11 ; i ++）{ if（strcmp（chinese2 [i]，a）== 0）      返回 i;
        
    }
    返回 0 ;
}
int  compare1（char a []，char b []，char c []）{
    int x;
    x = q1（a）;
    if（strcmp（a，“大于”）== 0）printf（“％s ”，b）;
    否则 if（strcmp（a，“小于”）== 0）
	printf（“％s ”，c）;
}

int  compare2（int n，char a []，char b []）{
    整数和
    和= q1（b）;
    if（strcmp（a，“增加”）== 0）
        返回 n +和；
    if（strcmp（a，“减少”）== 0）
        返回 n-总和;
    
}
int  main（）{
    int out1，out2;
    字符 a [ 100 ]，b [ 100 ]，c [ 100 ]，d [ 100 ]，e [ 100 ]，f [ 100 ]，g [ 100 ]，h [ 100 ]，j [ 100 ]，k [ 100 ] ;
    scanf（“％s％s％s％s％s％s％s％s％s％s％s ”，a，b，c，d，a，g，c，h，b，j，k）；
    out1 = q1（d）;
    out2 = q2（h）;
    scanf（“％s％s ”，f，g）;
    while（scanf（“％s％s ”，f，g）！= EOF）
	 {
    	
        if（strcmp（g，“看看”）！= 0）
		{
            scanf（“％s ”，k）;
            out1 = compare2（out1，j，k）;
		
            如果（out1> q1（d））
               
			    printf（“％s ”，chinese2 [out2 + 1 ]）;
			}

    }
}
    
    
}
